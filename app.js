console.log("hi");

const tg_token = "780094019:AAHosBJLc3JIUeGyNIKsz3KMy8tVerrmLYo";

const Telegraf = require('telegraf');
let storage = require("/Users/Sonya/Documents/LMHack/storage");
const Extra = require('telegraf/extra');
const Markup = require('telegraf/markup');

let article_links = [];
let video_links = [];


const bot = new Telegraf(tg_token);
bot.start((ctx) => {
    storage.setUser(ctx.from.id, ctx.from.first_name, ctx.from.username);
    console.log(storage.getUsername(ctx.from.id));
    return ctx.reply('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ' + ctx.from.first_name + '! –í—ã —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å —Å–æ —Å—Ç–∏–ª–µ–º?', Markup
        .keyboard(['–î–∞', '–ù–µ—Ç'])
        .oneTime()
        .resize()
        .extra()
    );
});

bot.hears('–î–∞', ({ reply }) =>
    reply ("–ö—Ä—É—Ç–æ!", Markup
        .keyboard(['–°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω —Ä–µ–º–æ–Ω—Ç–∞', '–°–æ–≤–µ—Ç—ã', '–í –Ω–∞—á–∞–ª–æ'])
        .oneTime()
        .resize()
        .extra()
    )
);

bot.hears('–°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω —Ä–µ–º–æ–Ω—Ç–∞', ({ reply }) =>
    reply ("", Markup
        .keyboard([])
        .oneTime()
        .resize()
        .extra()
    )
);

bot.hears('–°–æ–≤–µ—Ç—ã', ({ reply }) =>
    reply ("", Markup
        .keyboard([])
        .oneTime()
        .resize()
        .extra()
    )
);

bot.hears('–ù–µ—Ç', ({ reply }) =>
    reply ("–ì–æ—Ç–æ–≤—ã –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç—å—Å—è?", Markup
        .keyboard(["–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ", "–ü–µ—Ä–µ–¥—É–º–∞–ª –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å—Å—è"])
        .oneTime()
        .resize()
        .extra()
    )
);

bot.hears("–ü–µ—Ä–µ–¥—É–º–∞–ª –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å—Å—è", ({ reply }) =>
    reply("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", Markup
        .keyboard(["–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ", "Moodboard", "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "–ü–ª–∞–Ω —Ä–µ–º–æ–Ω—Ç–∞"])
        .oneTime()
        .resize()
        .extra()
    )
);

bot.hears('–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ', ({ reply }) =>
    reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É', Markup
        .keyboard(['–ö—É—Ö–Ω—è', '–î–µ—Ç—Å–∫–∞—è', "–ü–µ—Ä–µ–¥—É–º–∞–ª –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å—Å—è"])
        .oneTime()
        .resize()
        .extra()
    )
);

bot.hears('–î–µ—Ç—Å–∫–∞—è', ({ reply }) =>
    reply('–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è?', Markup
        .keyboard(['üå∏ –ù–µ–∂–Ω—ã–π', 'üé™ –Ø—Ä–∫–∏–π', 'üîô –ö –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã'])
        .oneTime()
        .resize()
        .extra()
    )
);

bot.hears('üîô –ö –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã', ({ reply }) =>
        reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É', Markup
            .keyboard(['–ö—É—Ö–Ω—è', '–î–µ—Ç—Å–∫–∞—è'])
            .oneTime()
            .resize()
            .extra()
        )
);

bot.hears('üå∏ –ù–µ–∂–Ω—ã–π', ( ctx ) => {
    return ctx.replyWithPhoto({ source: 'pics/children/pink/room.jpg' },
        Extra.load({ caption: "–ò–¥–µ–∞–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –≤ –¥–µ—Ç—Å–∫–æ–π"})
            .markdown()
            .markup((m) =>
                m.inlineKeyboard([
                    m.callbackButton('‚ûï Moodboard', 'moodboard', storage.addMoodboardPic(ctx.from.id, 'Dream-–î–µ—Ç—Å–∫–∞—è', 'pics/children/pink/room.jpg')),
                    m.urlButton("üõç –¢–æ–≤–∞—Ä—ã", 'https://kazan.leroymerlin.ru/proekty/idealnyy-poryadok-v-detskoy/'),
                    m.callbackButton("üîô –ù–∞–∑–∞–¥", 'return_to_rooms_mood')
                ])
            )
    )
});

bot.hears('üé™ –Ø—Ä–∫–∏–π', ( ctx ) => {
    return ctx.replyWithPhoto({source: 'pics/children/fun/room.jpg'},
        Extra.load({caption: "–ß–µ–º —Å—Ç–∞—Ä—à–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ä–µ–±—ë–Ω–æ–∫, —Ç–µ–º –≤–∞–∂–Ω–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–µ—Ç—Å–∫—É—é –∫–æ–º–Ω–∞—Ç—É —Å —É—á—ë—Ç–æ–º –µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∏ —Ä–∞—Å–ø–æ—Ä—è–¥–∫–∞ –¥–Ω—è."})
            .markdown()
            .markup((m) =>
                m.inlineKeyboard([
                    m.callbackButton('‚ûï Moodboard', 'moodboard', storage.addMoodboardPic(ctx.from.id, 'Dream-–î–µ—Ç—Å–∫–∞—è', 'pics/children/fun/room.jpg')),
                    m.urlButton("üõç –¢–æ–≤–∞—Ä—ã", 'https://kazan.leroymerlin.ru/proekty/detskaya-v-yarkih-tonah/'),
                    m.callbackButton("üîô –ù–∞–∑–∞–¥", 'return_to_rooms_mood')
                ])
            )
    )
});

bot.action('return_to_rooms_mood', ({ reply }) => {
    reply('–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è?', Markup
        .keyboard(['üå∏ –ù–µ–∂–Ω—ã–π', 'üé™ –Ø—Ä–∫–∏–π', "–ü–µ—Ä–µ–¥—É–º–∞–ª –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å—Å—è"])
        .oneTime()
        .resize()
        .extra()
    )
});

bot.action("moodboard", (ctx, fn) => {
    ctx.answerCbQuery('–î–æ–±–∞–≤–ª–µ–Ω–æ!').then(() => fn());
    console.log(storage.getUsername(ctx.from.id));
});

bot.hears("Moodboard", (ctx) => {
    existing_room_names = storage.getMoodboardRoomNames(ctx.from.id);
    console.log(existing_room_names);
    button_names = existing_room_names.push("–ü–µ—Ä–µ–¥—É–º–∞–ª –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å—Å—è");
    return ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É", Markup
        .keyboard(existing_room_names)
        .oneTime()
        .resize()
        .extra()
    )}
);


bot.startPolling();

